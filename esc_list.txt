Controls beginning with ESC 
This excludes controls where ESC is part of a 7-bit equivalent to 8-bit C1 controls, ordered by the final character(s).
ESC SP F
7-bit controls (S7C1T).
ESC SP G
8-bit controls (S8C1T).
ESC SP L
Set ANSI conformance level 1 (dpANS X3.134.1).
ESC SP M
Set ANSI conformance level 2 (dpANS X3.134.1).
ESC SP N
Set ANSI conformance level 3 (dpANS X3.134.1).
ESC # 3
DEC double-height line, top half (DECDHL).
ESC # 4
DEC double-height line, bottom half (DECDHL).
ESC # 5
DEC single-width line (DECSWL).
ESC # 6
DEC double-width line (DECDWL).
ESC # 8
DEC Screen Alignment Test (DECALN).
ESC % @
Select default character set. That is ISO 8859-1 (ISO 2022).
ESC % G
Select UTF-8 character set (ISO 2022).
ESC ( C
Designate G0 Character Set (ISO 2022, VT100).
Final character C for designating 94-character sets. In this list, 0 , A and B apply to VT100 and up, the remainder to VT220 and up: 
C = 0 → DEC Special Character and Line Drawing Set. 
C = A → United Kingdom (UK). 
C = B → United States (USASCII). 
C = 4 → Dutch. 
C = C or 5 → Finnish. 
C = R → French. 
C = Q → French Canadian. 
C = K → German. 
C = Y → Italian. 
C = E or 6 → Norwegian/Danish. 
C = Z → Spanish. 
C = H or 7 → Swedish. 
C = = → Swiss.
ESC ) C
Designate G1 Character Set (ISO 2022, VT100).
The same character sets apply as for ESC ( C.
ESC * C
Designate G2 Character Set (ISO 2022, VT220).
The same character sets apply as for ESC ( C.
ESC + C
Designate G3 Character Set (ISO 2022, VT220).
The same character sets apply as for ESC ( C.
ESC - C
Designate G1 Character Set (VT300).
The same character sets apply as for ESC ( C.
ESC . C
Designate G2 Character Set (VT300).
The same character sets apply as for ESC ( C.
ESC / C
Designate G3 Character Set (VT300).
These work for 96-character sets only. 
C = A → ISO Latin-1 Supplemental.
ESC 7
Save Cursor (DECSC).
ESC 8
Restore Cursor (DECRC).
ESC =
Application Keypad (DECPAM).
ESC >
Normal Keypad (DECPNM).
ESC F
Cursor to lower left corner of screen. This is enabled by the hpLowerleftBugCompat resource.
ESC c
Full Reset (RIS).
ESC l
Memory Lock (per HP terminals). Locks memory above the cursor.
ESC m
Memory Unlock (per HP terminals).
ESC n
Invoke the G2 Character Set as GL (LS2).
ESC o
Invoke the G3 Character Set as GL (LS3).
ESC |
Invoke the G3 Character Set as GR (LS3R).
ESC }
Invoke the G2 Character Set as GR (LS2R).
ESC ~
Invoke the G1 Character Set as GR (LS1R).

Device-Control functions
DCS Ps ; Ps | P t ST
User-Defined Keys (DECUDK). The first parameter: 
Ps = 0 → Clear all UDK definitions before starting (default). 
Ps = 1 → Erase Below (default). 
The second parameter: 
Ps = 0 ← Lock the keys (default). 
Ps = 1 ← Do not lock. 
The third parameter is a ’;’-separated list of strings denoting the key-code separated by a ’/’ from the hex-encoded key value. The key codes correspond to the DEC function-key codes (e.g., F6=17).
DCS $ q P t ST
Request Status String (DECRQSS). The string following the "q" is one of the following:
“ q
→ DECSCA 
“ p
→ DECSCL 
r
→ DECSTBM 
m
→ SGR
xterm responds with DCS 1 $ r P t ST for valid requests, replacing the P t with the corresponding CSI string, or DCS 0 $ r P t ST for invalid requests.
DCS + p P t ST
Set Termcap/Terminfo Data (xterm, experimental). The string following the "p" is a name to use for retrieving data from the terminal database. The data will be used for the "tcap" keyboard configuration’s function- and special-keys, as well as by the Request Termcap/Terminfo String control.
DCS + q P t ST
Request Termcap/Terminfo String (xterm, experimental). The string following the "q" is a list of names encoded in hexadecimal (2 digits per character) separated by ; which correspond to termcap or terminfo key names. 
Two special features are also recognized, which are not key names: Co for termcap colors (or colors for terminfo colors), and TN for termcap name (or name for terminfo name). 
xterm responds with DCS 1 + r P t ST for valid requests, adding to P t an = , and the value of the corresponding string that xterm would send, or DCS 0 + r P t ST for invalid requests. The strings are encoded in hexadecimal (2 digits per character).
CSI Ps @
Insert Ps (Blank) Character(s) (default = 1) (ICH).
CSI Ps A
Cursor Up Ps Times (default = 1) (CUU).
CSI Ps B
Cursor Down Ps Times (default = 1) (CUD).
CSI Ps C
Cursor Forward Ps Times (default = 1) (CUF).
CSI Ps D
Cursor Backward Ps Times (default = 1) (CUB).
CSI Ps E
Cursor Next Line Ps Times (default = 1) (CNL).
CSI Ps F
Cursor Preceding Line Ps Times (default = 1) (CPL).
CSI Ps G
Cursor Character Absolute [column] (default = [row,1]) (CHA).
CSI Ps ; Ps H
Cursor Position [row;column] (default = [1,1]) (CUP).
CSI Ps I
Cursor Forward Tabulation Ps tab stops (default = 1) (CHT).
CSI Ps J
Erase in Display (ED).
Ps = 0 → Erase Below (default). 
Ps = 1 → Erase Above. 
Ps = 2 → Erase All. 
Ps = 3 → Erase Saved Lines (xterm).
CSI ? Ps J
Erase in Display (DECSED).
Ps = 0 → Selective Erase Below (default). 
Ps = 1 → Selective Erase Above. 
Ps = 2 → Selective Erase All.
CSI Ps K
Erase in Line (EL).
Ps = 0 → Erase to Right (default). 
Ps = 1 → Erase to Left. 
Ps = 2 → Erase All.
CSI ? Ps K
Erase in Line (DECSEL).
Ps = 0 → Selective Erase to Right (default). 
Ps = 1 → Selective Erase to Left. 
Ps = 2 → Selective Erase All.
CSI Ps L
Insert Ps Line(s) (default = 1) (IL).
CSI Ps M
Delete Ps Line(s) (default = 1) (DL).
CSI Ps P
Delete Ps Character(s) (default = 1) (DCH).
CSI Ps S
Scroll up Ps lines (default = 1) (SU).
CSI Ps T
Scroll down Ps lines (default = 1) (SD).
CSI Ps ; P
s ; Ps ; Ps ; Ps T
Initiate highlight mouse tracking. Parameters are [func;startx;starty;firstrow;lastrow]. See the section Mouse Tracking.
CSI > Ps ;
Ps T
Reset one or more features of the title modes to the default value. Normally, "reset" disables the feature. It is possible to disable the ability to reset features by compiling a different default for the title modes into xterm.
Ps = 0 → Do not set window/icon labels using hexadecimal. 
Ps = 1 → Do not query window/icon labels using hexadecimal. 
Ps = 2 → Do not set window/icon labels using UTF-8. 
Ps = 3 → Do not query window/icon labels using UTF-8. (See discussion of "Title Modes").
CSI Ps X
Erase Ps Character(s) (default = 1) (ECH).
CSI Ps Z
Cursor Backward Tabulation Ps tab stops (default = 1) (CBT).
CSI Pm `
Character Position Absolute [column] (default = [row,1]) (HPA).
CSI Ps b
Repeat the preceding graphic character Ps times (REP).
CSI Ps c
Send Device Attributes (Primary DA).
Ps = 0 or omitted → request attributes from terminal. The response depends on the decTerminalID resource setting. 
→ CSI ? 1 ; 2 c (‘‘VT100 with Advanced Video Option’’) 
→ CSI ? 1 ; 0 c (‘‘VT101 with No Options’’) 
→ CSI ? 6 c (‘‘VT102’’) 
→  CSI ? 6 0 ; 1 ; 2 ; 6 ; 8 ; 9 ; 1 5 ; c (‘‘VT220’’) 
The VT100-style response parameters do not mean anything by themselves. VT220 parameters do, telling the host what features the terminal supports: 
Ps = 1 → 132-columns. 
Ps = 2 → Printer. 
Ps = 6 → Selective erase. 
Ps = 8 → User-defined keys. 
Ps = 9 → National replacement character sets. 
Ps = 1 5 → Technical characters. 
Ps = 2 2 → ANSI color, e.g., VT525. 
Ps = 2 9 → ANSI text locator (i.e., DEC Locator mode).
CSI > Ps c
Send Device Attributes (Secondary DA).
Ps = 0 or omitted → request the terminal’s identification code. The response depends on the decTerminalID resource setting. It should apply only to VT220 and up, but xterm extends this to VT100. 
→ CSI > P p ; P v ; P c c 
where P p denotes the terminal type 
P p = 0 → ‘‘VT100’’. 
P p = 1 → ‘‘VT220’’. 
and P v is the firmware version (for xterm, this was originally the XFree86 patch number, starting with 95). In a DEC terminal, P c indicates the ROM cartridge registration number and is always zero.
CSI Pm d
Line Position Absolute [row] (default = [1,column]) (VPA).
CSI Ps ; P
s f
Horizontal and Vertical Position [row;column] (default = [1,1]) (HVP).
CSI Ps g
Tab Clear (TBC).
Ps = 0 → Clear Current Column (default). 
Ps = 3 → Clear All.
CSI Pm h
Set Mode (SM).
Ps = 2 → Keyboard Action Mode (AM). 
Ps = 4 → Insert Mode (IRM). 
Ps = 1 2 → Send/receive (SRM). 
Ps = 2 0 → Automatic Newline (LNM).
CSI ? Pm h
DEC Private Mode Set (DECSET).
Ps = 1 → Application Cursor Keys (DECCKM). 
Ps = 2 → Designate USASCII for character sets G0-G3 (DECANM), and set VT100 mode. 
Ps = 3 → 132 Column Mode (DECCOLM). 
Ps = 4 → Smooth (Slow) Scroll (DECSCLM). 
Ps = 5 → Reverse Video (DECSCNM). 
Ps = 6 → Origin Mode (DECOM). 
Ps = 7 → Wraparound Mode (DECAWM). 
Ps = 8 → Auto-repeat Keys (DECARM). 
Ps = 9 → Send Mouse X & Y on button press. See the section Mouse Tracking. 
Ps = 1 0 → Show toolbar (rxvt). 
Ps = 1 2 → Start Blinking Cursor (att610). 
Ps = 1 8 → Print form feed (DECPFF). 
Ps = 1 9 → Set print extent to full screen (DECPEX). 
Ps = 2 5 → Show Cursor (DECTCEM). 
Ps = 3 0 → Show scrollbar (rxvt). 
Ps = 3 5 → Enable font-shifting functions (rxvt). 
Ps = 3 8 → Enter Tektronix Mode (DECTEK). 
Ps = 4 0 → Allow 80 → 132 Mode. 
Ps = 4 1 → more(1) fix (see curses resource). 
Ps = 4 2 → Enable Nation Replacement Character sets (DECNRCM). 
Ps = 4 4 → Turn On Margin Bell. 
Ps = 4 5 → Reverse-wraparound Mode. 
Ps = 4 6 → Start Logging. This is normally disabled by a compile-time option. 
Ps = 4 7 → Use Alternate Screen Buffer. (This may be disabled by the titeInhibit resource). 
Ps = 6 6 → Application keypad (DECNKM). 
Ps = 6 7 → Backarrow key sends backspace (DECBKM). 
Ps = 1 0 0 0 → Send Mouse X & Y on button press and release. See the section Mouse Tracking. 
Ps = 1 0 0 1 → Use Hilite Mouse Tracking. 
Ps = 1 0 0 2 → Use Cell Motion Mouse Tracking. 
Ps = 1 0 0 3 → Use All Motion Mouse Tracking. 
Ps = 1 0 0 4 → Send FocusIn/FocusOut events. 
Ps = 1 0 0 5 → Enable Extended Mouse Mode. 
Ps = 1 0 1 0 → Scroll to bottom on tty output (rxvt). 
Ps = 1 0 1 1 → Scroll to bottom on key press (rxvt). 
Ps = 1 0 3 4 → Interpret "meta" key, sets eighth bit. (enables the eightBitInput resource). 
Ps = 1 0 3 5 → Enable special modifiers for Alt and NumLock keys. (This enables the numLock resource). 
Ps = 1 0 3 6 → Send ESC when Meta modifies a key. (This enables the metaSendsEscape resource). 
Ps = 1 0 3 7 → Send DEL from the editing-keypad Delete key. 
Ps = 1 0 3 9 → Send ESC when Alt modifies a key. (This enables the altSendsEscape resource). 
Ps = 1 0 4 0 → Keep selection even if not highlighted. (This enables the keepSelection resource). 
Ps = 1 0 4 1 → Use the CLIPBOARD selection. (This enables the selectToClipboard resource). 
Ps = 1 0 4 2 → Enable Urgency window manager hint when Control-G is received. (This enables the bellIsUrgent resource). 
Ps = 1 0 4 3 → Enable raising of the window when Control-G is received. (enables the popOnBell resource). 
Ps = 1 0 4 7 → Use Alternate Screen Buffer. (This may be disabled by the titeInhibit resource). 
Ps = 1 0 4 8 → Save cursor as in DECSC. (This may be disabled by the titeInhibit resource). 
Ps = 1 0 4 9 → Save cursor as in DECSC and use Alternate Screen Buffer, clearing it first. (This may be disabled by the titeInhibit resource). This combines the effects of the 1 0 4 7 and 1 0 4 8 modes. Use this with terminfo-based applications rather than the 4 7 mode. 
Ps = 1 0 5 0 → Set terminfo/termcap function-key mode. 
Ps = 1 0 5 1 → Set Sun function-key mode. 
Ps = 1 0 5 2 → Set HP function-key mode. 
Ps = 1 0 5 3 → Set SCO function-key mode. 
Ps = 1 0 6 0 → Set legacy keyboard emulation (X11R6). 
Ps = 1 0 6 1 → Set VT220 keyboard emulation. 
Ps = 2 0 0 4 → Set bracketed paste mode.
CSI Pm i
Media Copy (MC).
Ps = 0 → Print screen (default). 
Ps = 4 → Turn off printer controller mode. 
Ps = 5 → Turn on printer controller mode.
CSI ? Pm i
Media Copy (MC, DEC-specific).
Ps = 1 → Print line containing cursor. 
Ps = 4 → Turn off autoprint mode. 
Ps = 5 → Turn on autoprint mode. 
Ps = 1 0 → Print composed display, ignores DECPEX. 
Ps = 1 1 → Print all pages.
CSI Pm l
Reset Mode (RM).
Ps = 2 → Keyboard Action Mode (AM). 
Ps = 4 → Replace Mode (IRM). 
Ps = 1 2 → Send/receive (SRM). 
Ps = 2 0 → Normal Linefeed (LNM).
CSI ? Pm l
DEC Private Mode Reset (DECRST).
Ps = 1 → Normal Cursor Keys (DECCKM). 
Ps = 2 → Designate VT52 mode (DECANM). 
Ps = 3 → 80 Column Mode (DECCOLM). 
Ps = 4 → Jump (Fast) Scroll (DECSCLM). 
Ps = 5 → Normal Video (DECSCNM). 
Ps = 6 → Normal Cursor Mode (DECOM). 
Ps = 7 → No Wraparound Mode (DECAWM). 
Ps = 8 → No Auto-repeat Keys (DECARM). 
Ps = 9 → Don’t send Mouse X & Y on button press. 
Ps = 1 0 → Hide toolbar (rxvt). 
Ps = 1 2 → Stop Blinking Cursor (att610). 
Ps = 1 8 → Don’t print form feed (DECPFF). 
Ps = 1 9 → Limit print to scrolling region (DECPEX). 
Ps = 2 5 → Hide Cursor (DECTCEM). 
Ps = 3 0 → Don’t show scrollbar (rxvt). 
Ps = 3 5 → Disable font-shifting functions (rxvt). 
Ps = 4 0 → Disallow 80 → 132 Mode. 
Ps = 4 1 → No more(1) fix (see curses resource). 
Ps = 4 2 → Disable Nation Replacement Character sets (DECNRCM). 
Ps = 4 4 → Turn Off Margin Bell. 
Ps = 4 5 → No Reverse-wraparound Mode. 
Ps = 4 6 → Stop Logging. (This is normally disabled by a compile-time option). 
Ps = 4 7 → Use Normal Screen Buffer. 
Ps = 6 6 → Numeric keypad (DECNKM). 
Ps = 6 7 → Backarrow key sends delete (DECBKM). 
Ps = 1 0 0 0 → Don’t send Mouse X & Y on button press and release. See the section Mouse Tracking. 
Ps = 1 0 0 1 → Don’t use Hilite Mouse Tracking. 
Ps = 1 0 0 2 → Don’t use Cell Motion Mouse Tracking. 
Ps = 1 0 0 3 → Don’t use All Motion Mouse Tracking. 
Ps = 1 0 0 4 → Don’t send FocusIn/FocusOut events. 
Ps = 1 0 0 5 → Disable Extended Mouse Mode. 
Ps = 1 0 1 0 → Don’t scroll to bottom on tty output (rxvt). 
Ps = 1 0 1 1 → Don’t scroll to bottom on key press (rxvt). 
Ps = 1 0 3 4 → Don’t interpret "meta" key. (This disables the eightBitInput resource). 
Ps = 1 0 3 5 → Disable special modifiers for Alt and NumLock keys. (This disables the numLock resource). 
Ps = 1 0 3 6 → Don’t send ESC when Meta modifies a key. (This disables the metaSendsEscape resource). 
Ps = 1 0 3 7 → Send VT220 Remove from the editing-keypad Delete key. 
Ps = 1 0 3 9 → Don’t send ESC when Alt modifies a key. (This disables the altSendsEscape resource). 
Ps = 1 0 4 0 → Do not keep selection when not highlighted. (This disables the keepSelection resource). 
Ps = 1 0 4 1 → Use the PRIMARY selection. (This disables the selectToClipboard resource). 
Ps = 1 0 4 2 → Disable Urgency window manager hint when Control-G is received. (This disables the bellIsUrgent resource). 
Ps = 1 0 4 3 → Disable raising of the window when Control-G is received. (This disables the popOnBell resource). 
Ps = 1 0 4 7 → Use Normal Screen Buffer, clearing screen first if in the Alternate Screen. (This may be disabled by the titeInhibit resource). 
Ps = 1 0 4 8 → Restore cursor as in DECRC. (This may be disabled by the titeInhibit resource). 
Ps = 1 0 4 9 → Use Normal Screen Buffer and restore cursor as in DECRC. (This may be disabled by the titeInhibit resource). This combines the effects of the 1 0 4 7 and 1 0 4 8 modes. Use this with terminfo-based applications rather than the 4 7 mode. 
Ps = 1 0 5 0 → Reset terminfo/termcap function-key mode. 
Ps = 1 0 5 1 → Reset Sun function-key mode. 
Ps = 1 0 5 2 → Reset HP function-key mode. 
Ps = 1 0 5 3 → Reset SCO function-key mode. 
Ps = 1 0 6 0 → Reset legacy keyboard emulation (X11R6). 
Ps = 1 0 6 1 → Reset keyboard emulation to Sun/PC style. 
Ps = 2 0 0 4 → Reset bracketed paste mode.

CSI > Ps ; Ps m
Set or reset resource-values used by xterm to decide whether to construct escape sequences holding information about the modifiers pressed with a given key. The first parameter identifies the resource to set/reset. The second parameter is the value to assign to the resource. If the second parameter is omitted, the resource is reset to its initial value. 
Ps = 1 → modifyCursorKeys. 
Ps = 2 → modifyFunctionKeys. 
Ps = 4 → modifyOtherKeys. 
If no parameters are given, all resources are reset to their initial values.
CSI Ps n
Device Status Report (DSR).
Ps = 5 → Status Report. Result (‘‘OK’’) is 
CSI 0 n 
Ps = 6 → Report Cursor Position (CPR) [row;column]. Result is 
CSI r ; c R
CSI > Ps n
Disable modifiers which may be enabled via the CSI > Ps ; Ps m sequence. This corresponds to a resource value of "-1", which cannot be set with the other sequence. The parameter identifies the resource to be disabled:
Ps = 1 → modifyCursorKeys. 
Ps = 2 → modifyFunctionKeys. 
Ps = 4 → modifyOtherKeys. 
If the parameter is omitted, modifyFunctionKeys is disabled. When modifyFunctionKeys is disabled, xterm uses the modifier keys to make an extended sequence of functions rather than adding a parameter to each function key to denote the modifiers.
CSI ? Ps n
Device Status Report (DSR, DEC-specific).
Ps = 6 → Report Cursor Position (CPR) [row;column] as CSI ? r ; c R (assumes page is zero). 
Ps = 1 5 → Report Printer status as CSI ? 1 0 n (ready). or CSI ? 1 1 n (not ready). 
Ps = 2 5 → Report UDK status as CSI ? 2 0 n (unlocked) or CSI ? 2 1 n (locked). 
Ps = 2 6 → Report Keyboard status as 
CSI ? 2 7 ; 1 ; 0 ; 0 n (North American). 
The last two parameters apply to VT400 & up, and denote keyboard ready and LK01 respectively. 
Ps = 5 3 → Report Locator status as 
CSI ? 5 3 n Locator available, if compiled-in, or 
CSI ? 5 0 n No Locator, if not.
CSI > Ps p
Set resource value pointerMode. This is used by xterm to decide whether to hide the pointer cursor as the user types. Valid values for the parameter:
Ps = 0 → never hide the pointer. 
Ps = 1 → hide if the mouse tracking mode is not enabled. 
Ps = 2 → always hide the pointer. If no parameter is given, xterm uses the default, which is 1 .
CSI ! p
Soft terminal reset (DECSTR).
CSI Ps $ p
Request ANSI mode (DECRQM). For VT300 and up, reply is 
CSI Ps ; Pm $ y 
where Ps is the mode number as in RM, and Pm is the mode value: 
0 - not recognized 
1 - set 
2 - reset 
3 - permanently set 
4 - permanently reset
CSI ? Ps $ p
Request DEC private mode (DECRQM). For VT300 and up, reply is 
CSI ? Ps ; Pm $ p 
where Ps is the mode number as in DECSET, Pm is the mode value as in the ANSI DECRQM.
CSI Ps ; Ps “ p
Set conformance level (DECSCL). Valid values for the first parameter: 
Ps = 6 1 → VT100. 
Ps = 6 2 → VT200. 
Ps = 6 3 → VT300. 
Valid values for the second parameter: 
Ps = 0 → 8-bit controls. 
Ps = 1 → 7-bit controls (always set for VT100). 
Ps = 2 → 8-bit controls.
CSI Ps q
Load LEDs (DECLL).
Ps = 0 → Clear all LEDS (default). 
Ps = 1 → Light Num Lock. 
Ps = 2 → Light Caps Lock. 
Ps = 3 → Light Scroll Lock. 
Ps = 2 1 → Extinguish Num Lock. 
Ps = 2 2 → Extinguish Caps Lock. 
Ps = 2 3 → Extinguish Scroll Lock.
CSI Ps SP q
Set cursor style (DECSCUSR, VT520). 
Ps = 0 → blinking block. 
Ps = 1 → blinking block (default). 
Ps = 2 → steady block. 
Ps = 3 → blinking underline. 
Ps = 4 → steady underline.
CSI Ps “ q
Select character protection attribute (DECSCA). Valid values for the parameter:
Ps = 0 → DECSED and DECSEL can erase (default). 
Ps = 1 → DECSED and DECSEL cannot erase. 
Ps = 2 → DECSED and DECSEL can erase.
CSI Ps ; Ps r
Set Scrolling Region [top;bottom] (default = full size of window) (DECSTBM).
CSI ? Pm r
Restore DEC Private Mode Values. The value of Ps previously saved is restored. Ps values are the same as for DECSET.
CSI P t ; P l
; P b ; P r ; Ps $ r
Change Attributes in Rectangular Area (DECCARA), VT400 and up.
P t ; P l ; P b ; P r denotes the rectangle. 
Ps denotes the SGR attributes to change: 0, 1, 4, 5, 7.
CSI s
Save cursor (ANSI.SYS).
CSI ? Pm s
Save DEC Private Mode Values. Ps values are the same as for DECSET.
CSI Ps ; P
s ; Ps t
Window manipulation (from dtterm, as well as extensions). These controls may be disabled using the allowWindowOps resource. Valid values for the first (and any additional parameters) are:
Ps = 1 → De-iconify window. 
Ps = 2 → Iconify window. 
Ps = 3 ; x ; y → Move window to [x, y]. 
Ps = 4 ; height ; width → Resize the xterm window to height and width in pixels. 
Ps = 5 → Raise the xterm window to the front of the stacking order. 
Ps = 6 → Lower the xterm window to the bottom of the stacking order. 
Ps = 7 → Refresh the xterm window. 
Ps = 8 ; height ; width → Resize the text area to [height;width] in characters. 
Ps = 9 ; 0 → Restore maximized window. 
Ps = 9 ; 1 → Maximize window (i.e., resize to screen size). 
Ps = 1 0 ; 0 → Undo full-screen mode. 
Ps = 1 0 ; 1 → Change to full-screen. 
Ps = 1 1 → Report xterm window state. If the xterm window is open (non-iconified), it returns CSI 1 t . If the xterm window is iconified, it returns CSI 2 t . 
Ps = 1 3 → Report xterm window position. Result is CSI 3 ; x ; y t 
Ps = 1 4 → Report xterm window in pixels. Result is CSI 4 ; height ; width t 
Ps = 1 8 → Report the size of the text area in characters. Result is CSI 8 ; height ; width t 
Ps = 1 9 → Report the size of the screen in characters. Result is CSI 9 ; height ; width t 
Ps = 2 0 → Report xterm window’s icon label. Result is OSC L label ST 
Ps = 2 1 → Report xterm window’s title. Result is OSC l label ST 
Ps = 2 2 ; 0 → Save xterm icon and window title on stack. 
Ps = 2 2 ; 1 → Save xterm icon title on stack. 
Ps = 2 2 ; 2 → Save xterm window title on stack. 
Ps = 2 3 ; 0 → Restore xterm icon and window title from stack. 
Ps = 2 3 ; 1 → Restore xterm icon title from stack. 
Ps = 2 3 ; 2 → Restore xterm window title from stack. 
Ps >= 2 4 → Resize to Ps lines (DECSLPP).
CSI P t ; P l ; P b ; P r ; Ps $ t
Reverse Attributes in Rectangular Area (DECRARA), VT400 and up. 
P t ; P l ; P b ; P r denotes the rectangle. 
Ps denotes the attributes to reverse, i.e., 1, 4, 5, 7.
CSI > Ps ; Ps t
Set one or more features of the title modes. Each parameter enables a single feature. 
Ps = 0 → Set window/icon labels using hexadecimal. 
Ps = 1 → Query window/icon labels using hexadecimal. 
Ps = 2 → Set window/icon labels using UTF-8. 
Ps = 3 → Query window/icon labels using UTF-8. (See discussion of "Title Modes")
CSI Ps SP t
Set warning-bell volume (DECSWBV, VT520). 
Ps = 0 or 1 → off. 
Ps = 2 , 3 or 4 → low. 
Ps = 5 , 6 , 7 , or 8 → high.
CSI u
Restore cursor (ANSI.SYS).
CSI Ps SP
u
Set margin-bell volume (DECSMBV, VT520).
Ps = 1 → off. 
Ps = 2 , 3 or 4 → low. 
Ps = 0 , 5 , 6 , 7 , or 8 → high.
CSI P t ; P l ; P b ; P r ; P p ; P t ; P l ; P p $ v
Copy Rectangular Area (DECCRA, VT400 and up). 
P t ; P l ; P b ; P r denotes the rectangle. 
P p denotes the source page. 
P t ; P l denotes the target location. 
P p denotes the target page.
CSI P t ; P l ; P b ; P r ’ w
Enable Filter Rectangle (DECEFR), VT420 and up. 
Parameters are [top;left;bottom;right]. 
Defines the coordinates of a filter rectangle and activates it. Anytime the locator is detected outside of the filter rectangle, an outside rectangle event is generated and the rectangle is disabled. Filter rectangles are always treated as "one-shot" events. Any parameters that are omitted default to the current locator position. If all parameters are omitted, any locator motion will be reported. DECELR always cancels any prevous rectangle definition.
CSI Ps x
Request Terminal Parameters (DECREQTPARM).
if Ps is a "0" (default) or "1", and xterm is emulating VT100, the control sequence elicits a response of the same form whose parameters describe the terminal: 
Ps → the given Ps incremented by 2. 
P n = 1 ← no parity. 
P n = 1 ← eight bits. 
P n = 1 ← 2 8 transmit 38.4k baud. 
P n = 1 ← 2 8 receive 38.4k baud. 
P n = 1 ← clock multiplier. 
P n = 0 ← STP flags.
CSI Ps x
Select Attribute Change Extent (DECSACE).
Ps = 0 → from start to end position, wrapped. 
Ps = 1 → from start to end position, wrapped. 
Ps = 2 → rectangle (exact).
CSI P c ; P t ; P l ; P b ; P r $ x
Fill Rectangular Area (DECFRA), VT420 and up. 
P c is the character to use. 
P t ; P l ; P b ; P r denotes the rectangle.
CSI Ps ; P u ’ z
Enable Locator Reporting (DECELR). 
Valid values for the first parameter: 
Ps = 0 → Locator disabled (default). 
Ps = 1 → Locator enabled. 
Ps = 2 → Locator enabled for one report, then disabled. 
The second parameter specifies the coordinate unit for locator reports. 
Valid values for the second parameter: 
P u = 0 ← or omitted → default to character cells. 
P u = 1 ← device physical pixels. 
P u = 2 ← character cells.
CSI P t ; P l ; P b ; P r $ z
Erase Rectangular Area (DECERA), VT400 and up. 
P t ; P l ; P b ; P r denotes the rectangle.
CSI Pm ’ {
Select Locator Events (DECSLE).
Valid values for the first (and any additional parameters) are: 
Ps = 0 → only respond to explicit host requests (DECRQLP). 
(This is default). It also cancels any filter rectangle. 
Ps = 1 → report button down transitions. 
Ps = 2 → do not report button down transitions. 
Ps = 3 → report button up transitions. 
Ps = 4 → do not report button up transitions.
CSI P t ; P l ; P b ; P r $ {
Selective Erase Rectangular Area (DECSERA), VT400 and up. 
P t ; P l ; P b ; P r denotes the rectangle.
CSI Ps ’ |
Request Locator Position (DECRQLP).
Valid values for the parameter are: 
Ps = 0 , 1 or omitted → transmit a single DECLRP locator report.
If Locator Reporting has been enabled by a DECELR, xterm will respond with a DECLRP Locator Report. This report is also generated on button up and down events if they have been enabled with a DECSLE, or when the locator is detected outside of a filter rectangle, if filter rectangles have been enabled with a DECEFR.
→ CSI P e ; P b ; P r ; P c ; P p & w
Parameters are [event;button;row;column;page]. 
Valid values for the event: 
P e = 0 → locator unavailable - no other parameters sent. 
P e = 1 → request - xterm received a DECRQLP. 
P e = 2 → left button down. 
P e = 3 → left button up. 
P e = 4 → middle button down. 
P e = 5 → middle button up. 
P e = 6 → right button down. 
P e = 7 → right button up. 
P e = 8 → M4 button down. 
P e = 9 → M4 button up. 
P e = 1 0 → locator outside filter rectangle. 
‘‘button’’ parameter is a bitmask indicating which buttons are pressed: 
P b = 0 ← no buttons down. 
P b & 1 ← right button down. 
P b & 2 ← middle button down. 
P b & 4 ← left button down. 
P b & 8 ← M4 button down. 
‘‘row’’ and ‘‘column’’ parameters are the coordinates of the locator position in the xterm window, encoded as ASCII decimal. 
The ‘‘page’’ parameter is not used by xterm, and will be omitted.
Operating System Controls
OSC Ps ; P t ST
OSC Ps ; P t BEL
Set Text Parameters. For colors and font, if P t is a "?", the control sequence elicits a response which consists of the control sequence which would set the corresponding value. The dtterm control sequences allow you to determine the icon name and window title. 
Ps = 0 → Change Icon Name and Window Title to P t . 
Ps = 1 → Change Icon Name to P t . 
Ps = 2 → Change Window Title to P t . 
Ps = 3 → Set X property on top-level window. P t should be in the form "prop=value", or just "prop" to delete the property 
Ps = 4 ; c ; spec → Change Color Number c to the color specified by spec. This can be a name or RGB specification as per XParseColor. Any number of c name pairs may be given. The color numbers correspond to the ANSI colors 0-7, their bright versions 8-15, and if supported, the remainder of the 88-color or 256-color table.
If a "?" is given rather than a name or RGB specification, xterm replies with a control sequence of the same form which can be used to set the corresponding color. Because more than one pair of color number and specification can be given in one control sequence, xterm can make more than one reply.
Ps = 5 ; c ; spec → Change Special Color Number c to the color specified by spec. This can be a name or RGB specification as per XParseColor. Any number of c name pairs may be given. The special colors can also be set by adding the maximum number of colors to these codes in an OSC 4 control:
P c = 0 ← resource colorBD (BOLD). 
P c = 1 ← resource colorUL (UNDERLINE). 
P c = 2 ← resource colorBL (BLINK). 
P c = 3 ← resource colorRV (REVERSE).
The 8 colors (below) which may be set or queried using 1 0 through 1 7 are denoted dynamic colors, since the corresponding control sequences were the first means for setting xterm’s colors dynamically, i.e., after it was started. They are not the same as the ANSI colors. These controls may be disabled using the allowColorOps resource. At least one parameter is expected for P t . Each successive parameter changes the next color in the list. The value of Ps tells the starting point in the list. The colors are specified by name or RGB specification as per XParseColor.
If a "?" is given rather than a name or RGB specification, xterm replies with a control sequence of the same form which can be used to set the corresponding dynamic color. Because more than one pair of color number and specification can be given in one control sequence, xterm can make more than one reply.
Ps = 1 0 → Change VT100 text foreground color to P t . 
Ps = 1 1 → Change VT100 text background color to P t . 
Ps = 1 2 → Change text cursor color to P t . 
Ps = 1 3 → Change mouse foreground color to P t . 
Ps = 1 4 → Change mouse background color to P t . 
Ps = 1 5 → Change Tektronix foreground color to P t . 
Ps = 1 6 → Change Tektronix background color to P t . 
Ps = 1 7 → Change highlight background color to P t . 
Ps = 1 8 → Change Tektronix cursor color to P t . 
Ps = 1 9 → Change highlight foreground color to P t .
Ps = 4 6 → Change Log File to P t . (This is normally disabled by a compile-time option).
Ps = 5 0 → Set Font to P t . These controls may be disabled using the allowFontOps resource. If P t begins with a "#", index in the font menu, relative (if the next character is a plus or minus sign) or absolute. A number is expected but not required after the sign (the default is the current entry for relative, zero for absolute indexing). 
The same rule (plus or minus sign, optional number) is used when querying the font. The remainder of P t is ignored. 
A font can be specified after a "#" index expression, by adding a space and then the font specifier. 
If the "TrueType Fonts" menu entry is set (the renderFont resource), then this control sets/queries the faceName resource.
Ps = 5 1 (reserved for Emacs shell).
Ps = 5 2 → Manipulate Selection Data. These controls may be disabled using the allowWindowOps resource. The parameter P t is parsed as
P c ; P d
The first, P c , may contain any character from the set c p s 0 1 2 3 4 5 6 7 . It is used to construct a list of selection parameters for clipboard, primary, select, or cut buffers 0 through 8 respectively, in the order given. If the parameter is empty, xterm uses s 0 , to specify the configurable primary/clipboard selection and cut buffer 0. 
The second parameter, P d , gives the selection data. Normally this is a string encoded in base64. The data becomes the new selection, which is then available for pasting by other applications. 
If the second parameter is a ? , xterm replies to the host with the selection data encoded using the same protocol.
Ps = 1 0 4 ; c → Reset Color Number c. It is reset to the color specified by the corresponding X resource. Any number of c parameters may be given. These parameters correspond to the ANSI colors 0-7, their bright versions 8-15, and if supported, the remainder of the 88-color or 256-color table. If no parameters are given, the entire table will be reset.
Ps = 1 0 5 ; c → Reset Special Color Number c. It is reset to the color specified by the corresponding X resource. Any number of c parameters may be given. These parameters correspond to the special colors which can be set using an OSC 5 control (or by adding the maximum number of colors using an OSC 4 control).
The dynamic colors can also be reset to their default (resource) values: 
Ps = 1 1 0 → Reset VT100 text foreground color. 
Ps = 1 1 1 → Reset VT100 text background color. 
Ps = 1 1 2 → Reset text cursor color. 
Ps = 1 1 3 → Reset mouse foreground color. 
Ps = 1 1 4 → Reset mouse background color. 
Ps = 1 1 5 → Reset Tektronix foreground color. 
Ps = 1 1 6 → Reset Tektronix background color. 
Ps = 1 1 7 → Reset highlight color. 
Ps = 1 1 8 → Reset Tektronix cursor color.
Privacy Message
PM P t ST
xterm implements no PM functions; P t is ignored. P t need not be printable characters.
